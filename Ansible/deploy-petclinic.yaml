---
- name: Deploy Spring PetClinic to VM
  hosts: petclinic_vm
  become: true

  vars:
    ecr_image_url: "{{ ecr_url }}/{{ image_name }}"
    postgres_port: 5432
    postgres_user: {{ postgres_user }}
    postgres_password: {{ postgres_password }}
    postgres_db: {{ postgres_db }}


  tasks:
    - name: Ensure Docker is installed
      package:
        name: docker
        state: present

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: true

    - name: Stop and remove existing container
      shell: |
        docker stop {{ image_name }} || true
        docker rm {{ image_name }} || true
      ignore_errors: true

    - name: Remove old container
      community.docker.docker_container:
        name: "{{ image_name }}"
        state: absent

    - name: Pull new Docker image
      community.docker.docker_image:
        name: "{{ ecr_url }}"
        tag: "{{ image_tag }}"
        source: pull

    - name: Run new container
      community.docker.docker_container:
        name: "{{ image_name }}"
        image: "{{ ecr_url }}:{{ image_tag }}"
        state: started
        restart_policy: always
        published_ports:
          - "80:8080"
        env:
          POSTGRES_USER: "{{ postgres_user }}"
          POSTGRES_PASSWORD: "{{ postgres_password }}"
          POSTGRES_DB: "{{ postgres_db }}"


    - name: Wait for app to start
      wait_for:
        port: 80
        delay: 5
        timeout: 60
        state: started

    - name: Verify DB connection from inside container
      command: >
        docker exec {{ image_name }}
        nc -z {{ postgres_host }} {{ postgres_port }}
      register: db_check
      failed_when: db_check.rc != 0
      changed_when: false

    - name: Report success
      debug:
        msg: "Java app deployed successfully and connected to the database!"