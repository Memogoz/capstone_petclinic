---
- name: Deploy Spring PetClinic to VM
  hosts: petclinic_vm
  become: true

  vars:
    docker_image_name: "my-org/petclinic"
    docker_image_tag: "v1.3.0"        # This can be passed as --extra-vars
    mysql_host: "mysql.example.com"
    mysql_user: "petclinic_user"
    mysql_password: "secure_password"
    app_port: 8080

  tasks:

    - name: Stop and remove existing container
      docker_container:
        name: petclinic
        state: absent
        force_kill: true

    - name: Remove old image (if exists)
      docker_image:
        name: "{{ docker_image_name }}"
        tag: "{{ docker_image_tag }}"
        state: absent
      ignore_errors: true

    - name: Pull latest image from Docker registry
      docker_image:
        name: "{{ docker_image_name }}"
        tag: "{{ docker_image_tag }}"
        source: pull

    - name: Run the Docker container
      docker_container:
        name: petclinic
        image: "{{ docker_image_name }}:{{ docker_image_tag }}"
        state: started
        restart_policy: always
        ports:
          - "{{ app_port }}:8080"
        env:
          SPRING_DATASOURCE_URL: "jdbc:mysql://{{ mysql_host }}:3306/petclinic"
          SPRING_DATASOURCE_USERNAME: "{{ mysql_user }}"
          SPRING_DATASOURCE_PASSWORD: "{{ mysql_password }}"

    - name: Print application access link
      debug:
        msg: "Application deployed at http://{{ inventory_hostname }}:{{ app_port }}/"
